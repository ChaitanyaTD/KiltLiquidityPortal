services:
  db:
    image: postgres:15
    container_name: kiltliquidityportal-db
    restart: always
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - kilt-liquidity-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  server:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: kiltliquidityportal-server
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      CALCULATOR_PRIVATE_KEY: ${CALCULATOR_PRIVATE_KEY}
      BASE_RPC_URL: ${BASE_RPC_URL}
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kilt-liquidity-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: kiltliquidityportal-client
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      server:
        condition: service_healthy
    networks:
      - kilt-liquidity-network

  nginx:
    image: nginx:1.27-alpine
    container_name: kiltliquidityportal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
    restart: unless-stopped
    depends_on:
      client:
        condition: service_started
      server:
        condition: service_healthy
    networks:
      - kilt-liquidity-network

volumes:
  pgdata:

networks:
  kilt-liquidity-network:
    driver: bridge
